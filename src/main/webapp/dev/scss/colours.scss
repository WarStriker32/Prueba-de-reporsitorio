// Colour variables for light mode
$colours: (
    surface: white,
    onSurface: #4F4F4F,
    primary: #3F51B5,
    secondary: #673AB7
);

// Colour variables for dark mode
$colours-dark: (
    surface: #121212,
    onSurface: map-get($colours, surface),
    primary: #002984,
    secondary: #320B86
);

// Creating CSS variables as SCSS variables are not supported for prefers-color-scheme
:root {
    @each $name, $colour in $colours {
        --mdb-#{$name}:#{$colour};
    }
    color-scheme: light dark;
}
@media (prefers-color-scheme: dark) {
    :root {
        @each $name, $colour in $colours-dark {
            --mdb-#{$name}:#{$colour};
        }
        color-scheme: light dark;
    }

    ::-webkit-scrollbar-thumb {background-color: #7F7F7F !important;}
    ::-moz-selection {background-color: #320B86B3;} ::selection {background-color: #320B86B3;}
    .form-outline .form-control~.form-label {color: #FFF9}
    .card {background-color: map-get($map: $colours-dark, $key: surface); box-shadow: 0 10px 20px 0 #FFFFFF0D;}
    .navbar-light .navbar-nav .nav-link {color: #FFFFFF8C;}
    .card-header {border-bottom: 1px solid #FFFFFF20;}
    .bg-light {background-color: #262626 !important;} .bg-dark {background-color: #FBFBFB !important;}
    .form-outline .form-control.disabled, .form-outline .form-control:disabled, .form-outline .form-control[readonly] {background-color: #3A3A3A;}
    .navbar-light .navbar-nav .nav-link:focus, .navbar-light .navbar-nav .nav-link:hover {color: #FFFFFFB3;}
    .dropdown-menu {background-color: black;}
    .dropdown-item {color: invert($color: #212529);}
    .dropdown-item.active, .dropdown-item:active, .dropdown-item:focus, .dropdown-item:hover {color: invert(#16181B); background-color: invert(#EEE);}
    .form-control:disabled, .form-control:read-only {background-color: invert(#EEE);}
    .modal-content {background-color: black;}
    .col-form-label {color: invert(#0009);}
    .modal-header {border-bottom-color: invert(#E0E0E0);}
    .modal-footer {border-top-color: invert(#E0E0E0);}
    .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th {font-weight: 400;}
    .form-label {color: invert($color: #0009);}
    .form-check-input[type=radio]:after {background-color: black;}
	.form-select {background-color: #121212;}
}

// Creating function to get colour for easier use
@function getColour($colour-name) {
    @return var(--mdb-#{$colour-name});
}

::-webkit-scrollbar {width: 8px;}
::-webkit-scrollbar-thumb {background-color: #CECECE; border-radius: 4px;}
::-moz-selection {background-color: #673AB7B3; color: white;} ::selection {background-color: #673AB7B3; color: white;}
.btn-primary {background-color: getColour(primary);}
.btn-secondary {background-color: getColour(secondary);}
.form-check-input[type=radio]:checked::after {border-color: getColour(primary); background-color: getColour(primary);}
.form-select:focus {border-color: getColour(primary);}
th, td {color: getColour(onSurface);}
.table-striped>tbody>tr:nth-of-type(odd) {--mdb-table-accent-bg: #FFFFFF0D;}
.btn-outline-primary {
    color: getColour(primary); border-color: getColour(primary);
    &:hover {color: darken(map-get($colours, primary), 20%); background-color: invert(#00000005);}
}
.btn-outline-secondary {
    color: getColour(secondary); border-color: getColour(secondary);
    &:hover {color: darken(map-get($colours-dark, primary), 20%); background-color: invert(#00000005);}
}